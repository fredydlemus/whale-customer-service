name: CI Pipeline

on:
    push:
        branches:
            - main
            - staging
            - dev
    pull_request:
        branches:
            - main
            - staging
            - dev

jobs:
    build:
        name: Build, Test, and Push
        runs-on: ubuntu-latest
        environment: ${{github.ref_name}}
        env:
            ECR_REGISTRY: ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.us-east-1.amazonaws.com
            ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
            IMAGE_TAG: ${{github.sha}}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1
      

            - name: Login to AWS ECR
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build Docker image (builder stage)
              run: |
                docker build --target builder -t my-app-builder:${{env.IMAGE_TAG}} .

            - name: Run Unit Tests
              run: |
                docker run --rm my-app-builder:${{env.IMAGE_TAG}} npm test

            - name: Run Lint and Static Code Analysis
              run: |
                docker run --rm my-app-builder:${{env.IMAGE_TAG}} npm run lint

            - name: Build final production Docker image
              run: |
                docker build --target runner -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}} .

            - name: Scan Docker image for vulnerabilities
              uses: aquasecurity/trivy-action@master
              with:
                image-ref: '${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}'
                format: 'table'
                severity: 'CRITICAL,HIGH'
                exit-code: 1

            - name: Push Docker image to AWS ECR
              run: |
                docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}